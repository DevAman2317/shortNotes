Abstract Method:
	A method without its body or implementation.

Syntax: public abstract void display();

Abstract class: 
	A class which contains abstract methods.
	
Syntax: abstract class ClassName{}
-------------------------------------

abstract class Animal { // level of abstraction can be between 0% to 100%
	String name = "animal";
	public abstract void action();
	
	public void show(){
		// logic
	}
}

interface User {
	// level of abstraction must be 100%
	
	// all the methods of interface are public and abstract by default
	
	void add();
}

class Fish extends Animal {
	public void action() { Sysout("fish is swimming..."); }
}

class Bird implements User {
	public void action() { Sysout("bird is flying..."); }
	
	public void add() {
		// logic
	}
}

public class Test {
	public static void main(String[] args) {
		Animal obj = new Fish();
		obj.action();
	}
}


Parent 		Child		keyword
------------------------------------
class 		class		extends
interface	class		implements
interface	interface	extends
class		interface   x
------------------------------------

===============================================================

Array: is a fixed size collection of elements of same data type. / collection of homogenous elements.

// empty array 
	int size = 10;
	int[] ar1 = new int[size];
	sysout(ar[10]);
	// ArrayIndexOutOfBoundsException

// with values 
	int[] ar2 = {1,2,3,4,5,6,7};
	ar[7] = 10;
	
Traversing an array: visiting each element of the array atleast once.

0 -> 9

Sysout(ar1[4]);

for(int i=0; i<size; i++){
	Sysout(ar1[i]);
}

int length = ar2.length;
for(int i=0; i<length; i++){
	Sysout(ar2[i]);
}

User Input for array:
----------------------------------------------
import java.lang.*;
import java.util.Scanner;
class UserArray {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		// msg to tell size of array
		int size = sc.nextInt();
		
		int[] ar = new int[size];
		
		// msg to enter all the values
		
		for(int i=0; i<size; i++){ // loop is for taking input from user
			ar[i] = sc.nextInt();
		}
		
		for(int i=0; i<size; i++){ // loop is for priting the array
			Sysout(ar[i]);
		}
	}
}
----------------------------------------------

Strings: is collection or sequence of characters.

String name = "Vaibhav";				  // string literal
String lastName = new String("Vaibhav");  // string object

String xyz = "vaibhav"; // ASCII

name == xyz --> false
name == lastName --> false
name.equalsIgnoreCase(xyz); --> true

